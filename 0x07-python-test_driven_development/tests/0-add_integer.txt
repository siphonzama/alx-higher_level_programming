=============================
The ``0-add_integer`` module
=============================

Importing the ``add_integer`` function from the module:
======================================================
	>>> add_integer = __import__("0-add_integer").add_integer


Tests
================
* adding 2 regular integer numbers
    >>> add_integer(4, 2)
    6


* adding 2 regular integer numbers (one negative)
    >>> add_integer(20, -2)
    18


* adding a float and a negative integer
    >>> add_integer(20.5, -1)
    19


* missing argument (raise a TypeError)
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'


* empty string argument (raise a TypeError)
    >>> add_integer("")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* empty string arguments (raise a TypeError)
    >>> add_integer("", "")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* float argument as second parameter (raise a TypeError)
    >>> add_integer(15, "1")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer


* `None` as argument (raise a TypeError)
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* empty tuple argument (raise a TypeError)
    >>> add_integer(list())
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* tuple with 1 integer argument (raise a TypeError)
    >>> add_integer(list(1))
    Traceback (most recent call last):
    ...
    TypeError: 'int' object is not iterable


* empty dictionary argument (raise a TypeError)
    >>> add_integer({})
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* dictionary argument (raise a TypeError)
    >>> add_integer({"1": 1})
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


* infinite float argument (raise an OverflowError)
    >>> add_integer(float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* negative infinite float argument (raise an OverflowError)
    >>> add_integer(float("-inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* division by zero argument (raise a ZeroDivisionError)
    >>> add_integer(9 / 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


* infinite float as second parameter (raise an OverflowError)
    >>> add_integer(1, float("-inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* infinite float as second parameter (raise an OverflowError)
    >>> add_integer(1, float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* 2 infinite floats as parameters (raise an OverflowError)
    >>> add_integer(float("inf"), float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* negative infinite and positive infinite floats as parameters (raise an OverflowError)
    >>> add_integer(float("-inf"), float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


* NaN float argument (raise a ValueError)
    >>> add_integer(float("nan"))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer


* Pass a single integer argument
    >>> add_integer(2)
    100
